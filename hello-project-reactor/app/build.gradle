/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.9.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // https://mvnrepository.com/artifact/io.projectreactor/reactor-core
    implementation 'io.projectreactor:reactor-core:3.4.17'

    // https://mvnrepository.com/artifact/io.projectreactor/reactor-test
    testImplementation 'io.projectreactor:reactor-test:3.4.17'

    testImplementation 'io.mockk:mockk:1.10.6'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

application {
    // Define the main class for the application.
    mainClass = 'hello.project.reactor.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
